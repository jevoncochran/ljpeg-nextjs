{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jevon/Documents/Side Projects/NextJS/ljpeg-nextjs/components/MasonLayout.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport styles from \"../styles/MasonLayout.module.scss\";\nimport Image from \"./Image\";\nimport { SiteContext } from \"../context/siteContext\";\nimport { portraits } from \"../data/portraits\";\nimport { street } from \"../data/street\"; // import { chicago } from \"../../pages/Places/chicago\";\n// import { colombia } from \"../../pages/Places/colombia\";\n// import { brazil } from \"../../pages/Places/brazil\";\n// import { partyNoire } from \"../../pages/Events/partyNoire\";\n// import { tdeXmas2018 } from \"../../pages/Events/tdeXmas2018\";\n// import { futureHood } from \"../../pages/Events/futureHood\";\n\nimport Link from \"next/link\";\n\nvar MasonLayout = function MasonLayout(props) {\n  _s();\n\n  var _useContext = useContext(SiteContext),\n      collection = _useContext.collection,\n      rootPath = _useContext.rootPath,\n      chooseImgIdx = _useContext.chooseImgIdx,\n      imageIndex = _useContext.imageIndex;\n\n  var _useState = useState(\"\"),\n      imageArray = _useState[0],\n      setImageArray = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      href = _useState2[0],\n      setHref = _useState2[1];\n\n  cosnt;\n  useEffect(function () {\n    switch (collection) {\n      case \"portraits\":\n        setImageArray(portraits);\n        break;\n\n      case \"street\":\n        setImageArray(street);\n        break;\n\n      case \"Chicago\":\n        setImageArray(chicago);\n        break;\n\n      case \"Colombia\":\n        setImageArray(colombia);\n        break;\n\n      case \"Brazil\":\n        setImageArray(brazil);\n        break;\n\n      case \"Party-Noire\":\n        setImageArray(partyNoire);\n        break;\n\n      case \"TDE-Xmas\":\n        setImageArray(tdeXmas2018);\n        break;\n\n      case \"Future-Hood\":\n        setImageArray(futureHood);\n        break;\n\n      default:\n        break;\n    }\n  }, [collection]);\n  console.log(\"collection: \", collection);\n  console.log(\"image array: \", imageArray);\n  useEffect(function () {\n    console.log(\"image index: \", imageIndex);\n  }, [imageIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.ml,\n    children: imageArray !== \"\" && imageArray.map(function (item) {\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: collection === \"portraits\" ? \"/portraits/[id]\" : null,\n        as: \"portraits/\".concat(item.id),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: function onClick() {\n            return chooseImgIdx(item.id);\n          },\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            image: item.image,\n            alt: item.alt,\n            id: item.id\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MasonLayout, \"Tk6OrcXB+wN99oWwfIm8g42aWv4=\");\n\n_c = MasonLayout;\nexport default MasonLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"MasonLayout\");","map":{"version":3,"sources":["/Users/jevon/Documents/Side Projects/NextJS/ljpeg-nextjs/components/MasonLayout.js"],"names":["useState","useContext","useEffect","styles","Image","SiteContext","portraits","street","Link","MasonLayout","props","collection","rootPath","chooseImgIdx","imageIndex","imageArray","setImageArray","href","setHref","cosnt","chicago","colombia","brazil","partyNoire","tdeXmas2018","futureHood","console","log","ml","map","item","id","image","alt"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport styles from \"../styles/MasonLayout.module.scss\";\nimport Image from \"./Image\";\nimport { SiteContext } from \"../context/siteContext\";\nimport { portraits } from \"../data/portraits\";\nimport { street } from \"../data/street\";\n// import { chicago } from \"../../pages/Places/chicago\";\n// import { colombia } from \"../../pages/Places/colombia\";\n// import { brazil } from \"../../pages/Places/brazil\";\n// import { partyNoire } from \"../../pages/Events/partyNoire\";\n// import { tdeXmas2018 } from \"../../pages/Events/tdeXmas2018\";\n// import { futureHood } from \"../../pages/Events/futureHood\";\nimport Link from \"next/link\";\n\nconst MasonLayout = (props) => {\n  const { collection, rootPath, chooseImgIdx, imageIndex } = useContext(\n    SiteContext\n  );\n\n  const [imageArray, setImageArray] = useState(\"\");\n  const [href, setHref] = useState(\"\");\n  cosnt \n\n  useEffect(() => {\n    switch (collection) {\n      case \"portraits\":\n        setImageArray(portraits);\n        break;\n      case \"street\":\n        setImageArray(street);\n        break;\n      case \"Chicago\":\n        setImageArray(chicago);\n        break;\n      case \"Colombia\":\n        setImageArray(colombia);\n        break;\n      case \"Brazil\":\n        setImageArray(brazil);\n        break;\n      case \"Party-Noire\":\n        setImageArray(partyNoire);\n        break;\n      case \"TDE-Xmas\":\n        setImageArray(tdeXmas2018);\n        break;\n      case \"Future-Hood\":\n        setImageArray(futureHood);\n        break;\n      default:\n        break;\n    }\n  }, [collection]);\n\n  console.log(\"collection: \", collection);\n  console.log(\"image array: \", imageArray);\n\n  useEffect(() => {\n    console.log(\"image index: \", imageIndex);\n  }, [imageIndex]);\n\n  return (\n    <div className={styles.ml}>\n      {imageArray !== \"\" &&\n        imageArray.map((item) => (\n          <Link\n            href={collection === \"portraits\" ? `/portraits/[id]` : null}\n            as={`portraits/${item.id}`}\n          >\n            <div onClick={() => chooseImgIdx(item.id)}>\n              <Image\n                key={item.id}\n                image={item.image}\n                alt={item.alt}\n                id={item.id}\n              />\n            </div>\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nexport default MasonLayout;\n"]},"metadata":{},"sourceType":"module"}